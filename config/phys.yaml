/**:
    ros__parameters:
      env: 'phys'
      #use_sim_time: false #true

      ## DIRECTORIES 
      dir_rosbag: ws_ros2/data/

      ## DEBUG SETTINGSf the reference frame of the PX4 estimator and the one of the external pose estimate will not match in most cases. Therefore the reference f the reference frame of the PX4 estimator and the one of the external pose estimate will not match in most cases. Therefore the reference frame of the external pose estimate is named differently, it is calleframe of the external pose estimate is named differently, it is calle
      print_desired_load_pose: false # In the gcs background node
      print_debug_msgs: false # In the drone and load nodes (can add to other nodes too). TODO: Could properly use ROS logging levels: https://docs.ros.org/en/humble/Tutorials/Demos/Logging-and-logger-configuration.html
      run_logger_on: '' # If not empty, custom log data will be saved to the same directory as measurement data on the selected device
      run_logging_on: '' #'load' # If not empty, rosbags will be saved to the dir_rosbag directory on the selected device

      ## GROUND TRUTH SETTINGS
      gt_source: 'mocap' # 'gnss' (outdoors) or 'mocap' (indoors)
      topic_mocap: '/merton' #/merton_drone1/world

      t_px4_rel_mocap: [0.0, 0.0, 0.0] # Static offset of mocap world frame to body-fixed frame
      R_px4_rel_mocap_ypr: [-1.570796327, 3.141592654, 0.0] # Rotation of px4 relative to mocap world (defined on computer) in YPR, also in this order here (note that old mavros tf is in YPR like [-1.570796327, 3.141592654, 0.0])

      timer_period_mocap_repub: 0.02 # Need a min of 50 Hz without covariances, or 30 Hz with

      ## LOAD SETTINGS
      load_id: 1
      load_pose_type: 'ground_truth' #'quasi-static' # quasi-static, visual, ground_truth
      load_pub_quasi_static_tf: true # Publish the quasi-static load pose TF regardless of what load pose type is selected (useful baseline for evaluation)
      evaluate: true # If you want to evaluate the tracking performance of the load
      show_markers: 0 # Show the detected markers 0 = No, 1 = Yes all, 2 = Drone 1 only # TODO: Replace with ENUM?
      marker_edge_length: 0.125 #0.075 # m

      ## GCS SETTINGS
      auto_level: 0 # 0 = "Fully manual" - requires checks at intermediate steps, 1 = "semi-automatic" - fewer intermediate steps, 2 = "fully automatic" - turn into offboard mode for completely automatic mission
      run_load_node_on: 'load' # 'load', 'drone', 'gcs' We can run the load node on the gcs, a load or a drone
      run_background_node_on: 'drone' # 'load', 'drone', 'gcs' We can run the background node on the gcs, a load, or a drone
      run_user_node_on: 'drone' # 'drone', 'gcs'. Running the user node on the drone means that the RC will need to be used to send offboard transition commands, otherwise they can be sent from the gcs through WiFi
      user_interaction_through_rc: true #Send the user interaction commands from a remote controller (true) or through the ground control station (false)
      phase_change_requests_through_background: false # If true, phase change requests are sent through the gcs background node rather than from the gcs user node directly to the drones

      ## ESTIMATOR SETTINGS
      use_load_pose_estimator: false
      run_estimator_on: 'load'
      pnp_reprojection_threshold: 1.0 # Seems normal reprojection error is ~0.01

      ## RC SETTINGS
      rc_aux_thresholds: [0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.95] # Aux1 expected values for the different offboard phases: takeoff, formation, engage tension, mission, land, hold (all), kill (all)
      rc_aux_buffer: 0.01 # The +/- range from the above thresholds that are still considered acceptable

      ## DRONE SETTINGS
      first_drone_num: 1 #1
      num_drones: 3
      num_cameras: 3 # 0 if cameras are off
    
      drone_order: [1, 2, 3] #[1, 2, 3] #ACW from load's x axis

      ## CAMERA SETTINGS
      initial_reset: false #true
      enable_color: true
      enable_depth: false
      enable_infra1: false
      enable_infra2: false
      pointcloud.enable: false

      rgb_camera.enable_auto_exposure: true
      rgb_camera.color_profile: 640x480x15 #30

      ## FORMATION CONTROL
      kp_formation_load: 0.0 #0.1
      #r_drones_max_safety: 0.5 # m

      ## PHASE SETTINGS 
      # Mission settings
      mission_circle_r: 2.0 # m
      mission_circle_v: 0.75 # m/s 
      
      # Drone rate settings
      vel_load_vertical_slow: 0.05 # m/s
      vel_load_vertical_fast: 0.3 # m/s
      #yawspeed_load: 0.393

      vel_drone: 0.3 #0.1 # m/s
      yawspeed_drone: 0.393 # rad/s

      # Heights/distances/dimensions
      # Formation dimensions
      height_drone_cs_rel_gnd: 0.25 #0.24 # m
      height_load_cs_rel_gnd: 0.07 #0.1 # m
      height_load_pre_tension: -0.3 #-1.0 # m
      height_cable_attach_drone_rel_cs: 0.0 #m
      height_cable_attach_load_rel_cs: 0.03 #m

      takeoff_height_load: 1.0 #m
      takeoff_height_load_max: 3.0 #m # Safety feature - maximum height load will be commanded to take off

      r_drones_rel_load: 1.25 # m
      d_drones_rel_min: 0.0 # m
      d_drones_rel_max: 100.0 # m

      pos_threshold: 0.3 # m

      drone_yaws_rel_load: [3.141592654, -1.0472, 1.0472]

      # Load and cable dimensions
      cable_length: 2.2 #m
      load_connection_point_r: 0.095 #m

      # Camera and markers
      t_cam_rel_pixhawk: [0.09, 0.03, -0.09] #[0.1, 0.03, -0.025] # Camera translation relative to PX4 (i.e. drone body)
      R_cam_rel_pixhawk: [-2.61799387799, 0.0, -1.570796327] # Camera rotation relative to PX4 (i.e. drone body)

      t_marker_rel_load: [-0.03, 0.07, 0.0] # Marker translation relative to load (load TF measured from pixhawk)
      R_marker_rel_load: [0.0, 0.0, 1.570796327] # Marker rotation relative to load

      # Timings
      # Note cnt thresholds are linked to the timer periods
      timer_period_drone: 0.1 # sec
      timer_period_gcs_user: 0.1 # sec
      timer_period_gcs_background: 0.2 # sec
      timer_period_load: 0.1 # sec

      timer_period_logger: 0.1 # sec
      timer_estimation: 0.1 #sec

      cnt_threshold_drone_setup: 50 #5/timer_period_drone # Tried 3, sometimes issues (weird circling issue of drone 2)
      cnt_threshold_takeoff_start: 30 #3/timer_period_drone # INCREASE IF NEEDED
      cnt_threshold_takeoff_pre_tension: 100 #50
      cnt_threshold_fully_auto_pre_takeoff: 50
      cnt_threshold_land_pre_descent: 50
      cnt_threshold_land_post_load_down: 50
      cnt_threshold_land_drones: 100
      cnt_threshold_land_pre_disarm: 30

      # GCS background
      cnt_threshold_fully_auto_mission: 50

      ## Estimation parameters
      est_threshold_ang_dist: 10.0 # degrees. Angular threshold which new pose measurements must fall before triggering a warning
      est_threshold_time: 3.0 # seconds. Time between load pose estimates where the previous estimate is still trusted as a viable prior

      ## TOPIC NAMES
      topic_img_rgb: /color/image_raw
      topic_cam_info_color: /color/camera_info
      